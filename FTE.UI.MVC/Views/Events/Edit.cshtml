@model FTE.DATA.EF.Events

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EventID)

    <section id="contact" class="section-bg">
        <div class="container" data-aos="fade-up">
            <div class="section-header">
                <p>@ViewBag.Title</p>
                <h2>@Model.EventName</h2>
                <p class="mx-auto">
                    <a href="@Url.Action("Index", "Events")"><i class="fas fa-caret-square-left fa-2x pl-03"></i></a>
                </p>
            </div>
            <div class="row" @*contact-info*@>
                <div class="col-md-4">

                </div>
                <div class="col-md-4" @*justify-content-center align-items-center*@>
                    <div class="pl-03" @*class="align-items-center"*@>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.EditorFor(model => model.IsCancelled, new { htmlAttributes = new { @class = "checkbox" } })
                            @Html.LabelFor(model => model.IsCancelled, htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.IsCancelled, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.LocationID, "Location", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("LocationID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group text-center">
                        <input type="submit" value="Save Changes" class="btn btn-default" />
                    </div>

                </div>
                <div class="col-md-4">

                </div>
            </div>
        </div>
    </section>

}

<!--@*
   <div class="form-horizontal">
               <h4>Events</h4>
               <hr />
               @Html.ValidationSummary(true, "", new { @class = "text-danger" })
               @Html.HiddenFor(model => model.EventID)

               <div class="form-group">
                   @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                   </div>
               </div>

               <div class="form-group">
                   @Html.LabelFor(model => model.LocationID, "LocationID", htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       @Html.DropDownList("LocationID", null, htmlAttributes: new { @class = "form-control" })
                       @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                   </div>
               </div>

               <div class="form-group">
                   @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                   </div>
               </div>

               <div class="form-group">
                   @Html.LabelFor(model => model.IsCancelled, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       <div class="checkbox">
                           @Html.EditorFor(model => model.IsCancelled)
                           @Html.ValidationMessageFor(model => model.IsCancelled, "", new { @class = "text-danger" })
                       </div>
                   </div>
               </div>

               <div class="form-group">
                   @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                   </div>
               </div>

               <div class="form-group">
                   <div class="col-md-offset-2 col-md-10">
                       <input type="submit" value="Save" class="btn btn-default" />
                   </div>
               </div>
           </div>
       }

       <div>
           @Html.ActionLink("Back to List", "Index")
       </d
   <!--@*
   <div class="form-horizontal">
               <h4>Events</h4>
               <hr />
               @Html.ValidationSummary(true, "", new { @class = "text-danger" })
               @Html.HiddenFor(model => model.EventID)

               <div class="form-group">
                   @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                   </div>
               </div>

               <div class="form-group">
                   @Html.LabelFor(model => model.LocationID, "LocationID", htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       @Html.DropDownList("LocationID", null, htmlAttributes: new { @class = "form-control" })
                       @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                   </div>
               </div>

               <div class="form-group">
                   @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                   </div>
               </div>

               <div class="form-group">
                   @Html.LabelFor(model => model.IsCancelled, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       <div class="checkbox">
                           @Html.EditorFor(model => model.IsCancelled)
                           @Html.ValidationMessageFor(model => model.IsCancelled, "", new { @class = "text-danger" })
                       </div>
                   </div>
               </div>

               <div class="form-group">
                   @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                   </div>
               </div>

               <div class="form-group">
                   <div class="col-md-offset-2 col-md-10">
                       <input type="submit" value="Save" class="btn btn-default" />
                   </div>
               </div>
           </div>
       }

       <div>
           @Html.ActionLink("Back to List", "Index")
       </div>*@-->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
